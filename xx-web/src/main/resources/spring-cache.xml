<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd">

    <cache:annotation-driven cache-manager="cacheManager"/>

    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:xx-ehcache.xml"/>
        <property name="shared" value="true"/>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>

    <!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxIdle" value="${redis.maxIdle}"/>-->
        <!--<property name="testOnBorrow" value="${redis.testOnBorrow}"/>-->
    <!--</bean>-->

    <!--<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
        <!--<property name="hostName" value="${redis.host}"/>-->
        <!--<property name="port" value="${redis.port}"/>-->
        <!--<property name="password" value="${redis.password}"/>-->
        <!--<property name="usePool" value="true"></property>-->
        <!--<property name="poolConfig" ref="poolConfig"/>-->
    <!--</bean>-->

    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">-->
        <!--<property name="connectionFactory" ref="jedisConnectionFactory"/>-->
    <!--</bean>-->

    <!--<bean id="redisCacheProvider" class="com.fantasy.xxbase.cache.RedisCacheProvider">-->
        <!--<property name="redisTemplate" ref="redisTemplate"/>-->
    <!--</bean>-->

    <!--将session集中管理，集中存储在redis中-->
    <!--<bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">-->
        <!--<property name="maxInactiveIntervalInSeconds" value="1800" />-->
    <!--</bean>-->

    <bean id="redisBeanConfig" class="com.fantasy.xxcore.redis.RedisBeanConfig" lazy-init="true"></bean>

</beans>